/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package trasportation;

import com.toedter.calendar.JCalendar;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.JPopupMenu;
import javax.swing.KeyStroke;

/**
 *
 * @author Ameya Khasgiwala
 */
public class TransportationUI extends javax.swing.JFrame  implements PropertyChangeListener{
    JCalendar jcalender = new JCalendar() ;
    Date date;
    int sno;
    protected boolean dateSelected;
    protected JPopupMenu popup = new JPopupMenu() {
        public void setVisible(boolean b) {
            Boolean isCanceled = (Boolean) getClientProperty("JPopupMenu.firePopupMenuCanceled");
            if (b || (!b && dateSelected) || ((isCanceled != null) && !b && isCanceled.booleanValue())) {
                super.setVisible(b);
            }
        }
    };
     
    public TransportationUI() {
        initComponents();
        jcalender.getDayChooser().addPropertyChangeListener(this);
        jPanel1.getRootPane().setDefaultButton(submit);
    }

    TransportationUI(Login aThis) {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        File = new javax.swing.JMenu();
        New = new javax.swing.JMenuItem();
        Open = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        Undo = new javax.swing.JMenuItem();
        Redo = new javax.swing.JMenuItem();
        Cut = new javax.swing.JMenuItem();
        Copy = new javax.swing.JMenuItem();
        Paste = new javax.swing.JMenuItem();
        Find = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        trans_date = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        truckno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        item = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        msmt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rate = new javax.swing.JTextField();
        amt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        File.setText("jMenu1");
        File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileActionPerformed(evt);
            }
        });

        New.setText("jMenuItem1");
        File.add(New);

        Open.setText("jMenuItem1");
        File.add(Open);

        Exit.setText("jMenuItem1");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        File.add(Exit);

        Edit.setText("jMenu1");

        Undo.setText("jMenuItem1");
        Edit.add(Undo);

        Redo.setText("jMenuItem2");
        Edit.add(Redo);

        Cut.setText("jMenuItem3");
        Edit.add(Cut);

        Copy.setText("jMenuItem4");
        Edit.add(Copy);

        Paste.setText("jMenuItem1");
        Edit.add(Paste);

        Find.setText("jMenuItem1");
        Edit.add(Find);

        Help.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Transportation");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Date (dd/mm/yyyy):");

        trans_date.setEditable(false);
        trans_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trans_dateActionPerformed(evt);
            }
        });
        trans_date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                trans_dateKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Truck No:");

        truckno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trucknoActionPerformed(evt);
            }
        });
        truckno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                trucknoKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Item:");

        item.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Measurement:");

        msmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msmtActionPerformed(evt);
            }
        });
        msmt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                msmtKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Quantity:");

        qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyActionPerformed(evt);
            }
        });
        qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qtyKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Rate:");

        rate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rateKeyPressed(evt);
            }
        });

        amt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amtActionPerformed(evt);
            }
        });
        amt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amtKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Amount:");

        submit.setText("Submit and Print");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        submit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitKeyPressed(evt);
            }
        });

        jButton1.setMaximumSize(new java.awt.Dimension(80, 55));
        jButton1.setMinimumSize(new java.awt.Dimension(80, 55));
        jButton1.setPreferredSize(new java.awt.Dimension(80, 55));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(rate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(qty, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(msmt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(item, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(truckno, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(trans_date, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(amt)
                                .addGap(48, 48, 48))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(submit)
                        .addGap(57, 57, 57)
                        .addComponent(jLabel8)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(trans_date)
                        .addComponent(jLabel1)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(truckno)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(item)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                        .addGap(123, 123, 123)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amt)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(msmt)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(qty)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rate)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submit)
                    .addComponent(jLabel8))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void trucknoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trucknoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trucknoActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed

    private void FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FileActionPerformed

    private void trans_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trans_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trans_dateActionPerformed

    private void msmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msmtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_msmtActionPerformed

    private void qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection c=DriverManager.getConnection("jdbc:mysql://localhost:3306/transport","root","root");
            java.sql.Date d;
            if(date!=null){
                d = new java.sql.Date(date.getTime());
            }
            else{
                jLabel8.setText("Date should not be Empty");
                return;
            }
            
            String tno=truckno.getText();
            try {
                if(tno.equals("")){
                    jLabel8.setText("Truck Number should not be Empty");
                    return;
                }
            }
            catch(NullPointerException e){
                
            } 
        
            String item1=item.getText();
            if(item1.equals("")) {
                jLabel8.setText("Item should not be Empty");
                return;
            }
        
            String measurement=msmt.getText();
            try{
                int it = Integer.parseInt(msmt.getText());
                if(measurement.equals("")){
                    jLabel8.setText("Measurement should not be Empty");
                    return;
                } 
            }catch(NumberFormatException e){
                jLabel8.setText("Measurement should only be number");
                return;
            }
        
            String quantity=qty.getText();
            try{
                int quant = Integer.parseInt(qty.getText());
                if(quantity.equals("")){
                    jLabel8.setText("Quantity should not be Empty");
                    return;
                } 
            }catch(NumberFormatException e) {
                jLabel8.setText("Quantity should only be a number");
                return;
            }

            String rate1=rate.getText();
            try{
                int r = Integer.parseInt(rate.getText());
                if(rate1.equals("")){
                    jLabel8.setText("Rate should not be Empty");
                    return;
                } 
            }catch(NumberFormatException e){
                jLabel8.setText("Rate should be number");
                return;
            }
        
            String amt1=amt.getText();
            try{
                int a = Integer.parseInt(amt.getText());
                if(amt1.equals("")){
                    jLabel8.setText("Amount should not be Empty");
                    return;
                } 
            } catch(NumberFormatException e){
                jLabel8.setText("Amount should be number");
                return;
            }
        
            PreparedStatement ps=c.prepareStatement("insert into transport values (?,?,?,?,?,?,?,?)");
            ps.setDate(1,null);
            ps.setDate(2,d);
            ps.setString(3,tno);
            ps.setString(4,item1);
            ps.setString(5,measurement);
            ps.setString(6,quantity);
            ps.setString(7,rate1);
            ps.setString(8,amt1);
            ps.executeUpdate();
            Statement stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery("select * from transport");
            if(rs!=null){
                System.out.println("Hello");
            }
            int count=0;
            while(rs.next()){
                count++;
            }
            sno=count;
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        new ticket(this).setVisible(true);
        hide();
    }//GEN-LAST:event_submitActionPerformed

    private void amtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amtActionPerformed

    private void jCalendarButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCalendarButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCalendarButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int x = jButton1.getWidth() - (int) popup.getPreferredSize().getWidth();
        int y = jButton1.getY() + jButton1.getHeight();
        popup.add(jcalender);
        Calendar calendar = Calendar.getInstance();
        jcalender.setCalendar(calendar);
        popup.show(jButton1, x, y);
        dateSelected = false;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void submitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_submitKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ActionEvent ae = new ActionEvent((Object)submit, ActionEvent.ACTION_PERFORMED,"");
            submitActionPerformed(ae);
        }
    }//GEN-LAST:event_submitKeyPressed

    private void trans_dateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_trans_dateKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ActionEvent ae = new ActionEvent((Object)submit, ActionEvent.ACTION_PERFORMED,"");
            submitActionPerformed(ae);
        }
    }//GEN-LAST:event_trans_dateKeyPressed

    private void trucknoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_trucknoKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ActionEvent ae = new ActionEvent((Object)submit, ActionEvent.ACTION_PERFORMED,"");
            submitActionPerformed(ae);
        }
    }//GEN-LAST:event_trucknoKeyPressed

    private void itemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ActionEvent ae = new ActionEvent((Object)submit, ActionEvent.ACTION_PERFORMED,"");
            submitActionPerformed(ae);
        }
    }//GEN-LAST:event_itemKeyPressed

    private void msmtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_msmtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ActionEvent ae = new ActionEvent((Object)submit, ActionEvent.ACTION_PERFORMED,"");
            submitActionPerformed(ae);
        }
    }//GEN-LAST:event_msmtKeyPressed

    private void qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ActionEvent ae = new ActionEvent((Object)submit, ActionEvent.ACTION_PERFORMED,"");
            submitActionPerformed(ae);
        }
    }//GEN-LAST:event_qtyKeyPressed

    private void rateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rateKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ActionEvent ae = new ActionEvent((Object)submit, ActionEvent.ACTION_PERFORMED,"");
            submitActionPerformed(ae);
        }
    }//GEN-LAST:event_rateKeyPressed

    private void amtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            ActionEvent ae = new ActionEvent((Object)submit, ActionEvent.ACTION_PERFORMED,"");
            submitActionPerformed(ae);
        }
    }//GEN-LAST:event_amtKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransportationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransportationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransportationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransportationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new TransportationUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Copy;
    private javax.swing.JMenuItem Cut;
    private javax.swing.JMenu Edit;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenu File;
    private javax.swing.JMenuItem Find;
    private javax.swing.JMenu Help;
    private javax.swing.JMenuItem New;
    private javax.swing.JMenuItem Open;
    private javax.swing.JMenuItem Paste;
    private javax.swing.JMenuItem Redo;
    private javax.swing.JMenuItem Undo;
    private javax.swing.JTextField amt;
    private javax.swing.JTextField item;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField msmt;
    private javax.swing.JTextField qty;
    private javax.swing.JTextField rate;
    private javax.swing.JButton submit;
    private javax.swing.JTextField trans_date;
    private javax.swing.JTextField truckno;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals("day")) {
            dateSelected = true;
            popup.setVisible(false);
            date =jcalender.getCalendar().getTime();
            String day = Integer.toString(date.getDate());
            String month = Integer.toString(date.getMonth()+1);
            String year = Integer.toString(date.getYear()+1900);
            String d = day+"/"+month+"/"+year;
            trans_date.setText(d);
        } else if (evt.getPropertyName().equals("date")) {
            Date date=(Date) evt.getNewValue();
            String day = Integer.toString(date.getDate());
            String month = Integer.toString(date.getMonth()+1);
            String year = Integer.toString(date.getYear()+1900);
            String d = day+"/"+month+"/"+year;
            trans_date.setText(d);
          }
    }

    public void reset(){
    trans_date.setText("");
     truckno.setText("");
     item.setText("");
     msmt.setText("");
     qty.setText("");
     rate.setText("");
     amt.setText("");
    }

    public String[] getValues(){
        String values[] = new String[8];
        values[0]=Integer.toString(sno+1);
        values[1]=trans_date.getText();
        values[2]=truckno.getText();
        values[3]=item.getText();
        values[4]=msmt.getText();
        values[5]=qty.getText();
        values[6]=rate.getText();
        values[7]=amt.getText();
        return values;
    }
}